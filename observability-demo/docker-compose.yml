version: '3.8'

services:
  # Backend API Service
  backend:
    build: ./backend
    environment:
      - APP_VERSION=1.0.0
    ports:
      - "5001:5001"
    networks:
      - observability-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web Service  
  frontend:
    build: ./frontend
    environment:
      - APP_VERSION=1.0.0
      - BACKEND_URL=http://backend:5001
    ports:
      - "8080:5000"
    depends_on:
      - backend
    networks:
      - observability-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    networks:
      - observability-net
    depends_on:
      - frontend
      - backend

  # Grafana - Dashboards and Visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - observability-net
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:

networks:
  observability-net:
    driver: bridge