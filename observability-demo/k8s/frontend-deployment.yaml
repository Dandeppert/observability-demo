# Frontend service deployment and service definition
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: observability-demo
  labels:
    app: frontend
    version: v1
    component: web
spec:
  replicas: 2
  
  selector:
    matchLabels:
      app: frontend
  
  template:
    metadata:
      labels:
        app: frontend
        version: v1
        component: web
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    
    spec:
      containers:
      - name: frontend
        image: observability-demo/frontend:latest
        imagePullPolicy: Never
        
        ports:
        - containerPort: 5000
          name: http
        
        env:
        - name: APP_VERSION
          value: "1.0.0"
        - name: BACKEND_URL
          # Service discovery - frontend finds backend via Kubernetes DNS
          # This is where distributed tracing becomes valuable
          value: "http://backend-service:5001"
        - name: ENVIRONMENT
          value: "kubernetes"
        
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2

---
# Service to expose frontend pods
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: observability-demo
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
  - port: 5000
    targetPort: 5000
    name: http
  type: LoadBalancer  # Exposes service externally (use NodePort for minikube)